# name: deploy_backend

# on:
#   push:
#     branches: [ main ]
#     paths:
#     - 'backend/**'

# env:
#   AZURE_FUNCTIONAPP_NAME: GetResumeCounter
#   AZURE_FUNCTIONAPP_PACKAGE_PATH: 'backend'
#   DOTNET_VERSION: '6.0'

# jobs:
#   build:

#     runs-on: windows-latest

#     steps:
#     - uses: actions/checkout@v3
#     - name: 'Print manual run reason'
#       if: ${{ github.event_name == 'workflow_dispatch' }}
#       run: |
#         echo 'Reason: ${{ github.event.inputs.reason }}'
#     - name: Setup .NET
#       uses: actions/setup-dotnet@v3
#       with:
#         dotnet-version: 6.0.x
#     - name: Restore dependencies
#       run: dotnet restore
#     - name: Build
#       run: dotnet build --no-restore
#     - name: Test
#       run: dotnet test --no-build --verbosity normal
#     - name: Publish
#       run: dotnet publish SimpleFeedReader/SimpleFeedReader.csproj -c Release -o website
#     - name: Upload a Build Artifact
#       uses: actions/upload-artifact@v3
#       with:
#         name: website
#         path: SimpleFeedReader/website/**
#         if-no-files-found: error
  
#   deploy_staging:
#     needs: build
#     runs-on: ubuntu-latest

#     environment:
#       name: STAGING
#       url: ${{ steps.deploywebapp.outputs.webapp-url }}

#     steps:
#     - name: Download a Build Artifact
#       uses: actions/download-artifact@v3
#       with:
#         name: website
#         path: website

#     - name: Login via Azure CLI
#       uses: azure/login@v1
#       with:
#         creds: ${{ secrets.AZURE_CREDENTIALS }}

#     - name: Deploy web app
#       id: deploywebapp
#       uses: azure/webapps-deploy@v2
#       with:
#         app-name: ${{ env.app-name }}
#         slot-name: staging
#         package: website

#     - name: Update config
#       uses: Azure/appservice-settings@v1
#       with:
#        app-name: ${{ env.app-name }}
#        slot-name: staging
#        app-settings-json: |
#          [
#              {
#                  "name": "UI:Index:Header",
#                  "value": "${{ secrets.INDEX_HEADER }}",
#                  "slotSetting": true
#              }
#          ]

#     - name: az cli logout
#       run: az logout

#   deploy_prod:
#     needs: deploy_staging
#     runs-on: ubuntu-latest

#     environment:
#       name: PROD
#       url: ${{ steps.slot_swap.outputs.url }}

#     steps:
#     - name: Login via Azure CLI
#       uses: azure/login@v1
#       with:
#         creds: ${{ secrets.AZURE_CREDENTIALS }}

#     - name: Swap staging slot into production
#       id: slot_swap
#       run: |
#         az webapp deployment slot swap -g ${{ env.rg-name }} -n ${{ env.app-name }} -s staging
#         url=$(az webapp show -g ${{ env.rg-name }} -n ${{ env.app-name }} --query "defaultHostName" -o tsv)
#         echo "::set-output name=url::http://$url"

#     - name: Update config
#       uses: Azure/appservice-settings@v1
#       with:
#        app-name: ${{ env.app-name }}
#        app-settings-json: |
#          [
#              {
#                  "name": "UI:Index:Header",
#                  "value": "${{ secrets.INDEX_HEADER }}",
#                  "slotSetting": true
#              }
#          ]

#     - name: az cli logout
#       run: az logout